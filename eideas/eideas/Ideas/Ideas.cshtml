@using eideas.Areas.Identity.Data
@model ICollection<Idea>
@{
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <h1>Latest Ideas</h1>
        @foreach (var idea in Model)
        {
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="text-center" style="width:160px;">
                        <div class="text-center pull-left" style="margin-top:15px;">
                            <i class="glyphicon glyphicon-chevron-up upvote" onmousedown="upvote(@idea.IdeaId)"></i><br />
                            <span id="upvoteCount-@idea.IdeaId">@idea.IdeaUpdoots.Count</span>
                        </div>
                        <img class="pull-left" style="border-radius:50%; height: 80px; width: 80px; object-fit: cover; margin-left: 15px;" src="images/headshot.png" alt="Profile Picture" />
                    </div>
                    <div style="margin-left: 15px; float: left;">
                        <h3>@idea.IdeaContent</h3>
                        <p>Submitted by @idea.CreatedBy</p>
                    </div>

                    <div class="col-md-6 col-md-offset-6 col-xs-8 col-xs-offset-4" style="margin-top: -25px;">
                        <div class="col-xs-3 pdca text-center @(idea.PDCA == PDCA.plan ? "doing" : "") @(idea.PDCA > PDCA.plan ? "done" : "")">
                            Plan
                        </div>
                        <div class="col-xs-3 pdca text-center @(idea.PDCA == PDCA.@do ? "doing" : "") @(idea.PDCA > PDCA.@do ? "done" : "")">
                            Do
                        </div>
                        <div class="col-xs-3 pdca text-center @(idea.PDCA == PDCA.check ? "doing" : "") @(idea.PDCA > PDCA.check ? "done" : "")">
                            Check
                        </div>
                        <div class="col-xs-3 pdca text-center @(idea.PDCA == PDCA.act ? "doing" : "") @(idea.PDCA > PDCA.act ? "done" : "")">
                            Act
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function upvote(ideaId) {
        fetch('@Url.Action("Upvote")', {
        method: 'POST',
        headers: { "Content-type": "application/json" },
        body: ideaId //JSON.stringify({IdeaId: ideaId})
        })
        .then(() => {
            const ele = document.getElementById(`upvoteCount-${ideaId}`)
            console.log(ele)
            const count = ele.innerHTML
            ele.innerHTML = +count + 1; 
        })
    }
</script>

<style>
    .pdca {
        color: rgba(0,0,0,0.6);
        background-color: rgba(0,0,0,0.1);
    }

    .pdca.doing {
        background-color: lightgoldenrodyellow;
    }

    .pdca.done {
        background-color: lightgreen;
    }

    .panel {
        transition: all 0.3s ease;
    }

    .panel:hover {
        box-shadow: 0 2px 1px rgba(0,0,0,0.16), 0 1px 2px rgba(0,0,0,0.23);
        cursor: pointer;
    }

    .upvote {
        font-size: 24pt;
    }

    .upvote.voted {
        color: rgb(39, 128, 227);
    }

    .upvote:hover {
        color: rgb(39, 128, 227);
    }
</style>